<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b03ac556-b29e-4ae2-8b6e-8a7be861813c" name="更改" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Utilities/SendJsonMsg.go" beforeDir="false" afterPath="$PROJECT_DIR$/Utilities/SendJsonMsg.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Utilities/database.go" beforeDir="false" afterPath="$PROJECT_DIR$/Utilities/database.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Utilities/logFunc.go" beforeDir="false" afterPath="$PROJECT_DIR$/Utilities/logFunc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/define/status.go" beforeDir="false" afterPath="$PROJECT_DIR$/define/status.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/logs/VideoWeb.log.20240421" beforeDir="false" afterPath="$PROJECT_DIR$/logs/VideoWeb.log.20240421" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.exe" beforeDir="false" afterPath="$PROJECT_DIR$/main.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/middlewares/auth_admin.go" beforeDir="false" afterPath="$PROJECT_DIR$/middlewares/auth_admin.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/Barrage.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/Barrage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/Comments.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/Comments.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/Favorites.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/Favorites.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/UserFollow.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/UserFollow.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/Users.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/Users.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/Videos.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/Videos.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../tmp/go1.22.1" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;EmbraceTheLight&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:EmbraceTheLight/VideoWeb.git&quot;,
    &quot;accountId&quot;: &quot;c1d93c50-52de-478e-9e2a-3d0518c9f0aa&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2eYFWPWCeDEVd0r5dCkmWPIXjlh" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go 测试.VideoWeb/test 中的 TestHardDelete.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.VideoWeb/test 中的 TestLog.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.VideoWeb/test 中的 TestReadConfig.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.VideoWeb/test 中的 TestSendEmail.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.VideoWeb/test 中的 TestVideoTime.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.config_test.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.gobench VideoWeb/test.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/张恩阳&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mysql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Go\WorkSpace\src\Go_Project\VideoWeb\service" />
      <recent name="D:\Go\WorkSpace\src\Go_Project\VideoWeb\service\Video" />
    </key>
  </component>
  <component name="RunManager" selected="Go 测试.VideoWeb/test 中的 TestLog">
    <configuration name="VideoWeb/test 中的 TestLog" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="VideoWeb" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="VideoWeb/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestLog\E$" />
      <method v="2" />
    </configuration>
    <configuration name="VideoWeb/test 中的 TestReadConfig" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="VideoWeb" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="VideoWeb/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestReadConfig\E$" />
      <method v="2" />
    </configuration>
    <configuration name="VideoWeb/test 中的 TestSendEmail" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="VideoWeb" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="VideoWeb/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSendEmail\E$" />
      <method v="2" />
    </configuration>
    <configuration name="config_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="VideoWeb" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test/config_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="gobench VideoWeb/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="VideoWeb" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="VideoWeb/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 测试.VideoWeb/test 中的 TestLog" />
        <item itemvalue="Go 测试.gobench VideoWeb/test" />
        <item itemvalue="Go 测试.VideoWeb/test 中的 TestSendEmail" />
        <item itemvalue="Go 测试.config_test.go" />
        <item itemvalue="Go 测试.VideoWeb/test 中的 TestReadConfig" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-b97fc8a1e17c-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.14494.238" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-GO-241.14494.238" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>